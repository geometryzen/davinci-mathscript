export declare const Syntax: {
    AssignmentExpression: string;
    AssignmentPattern: string;
    ArrayExpression: string;
    ArrayPattern: string;
    ArrowFunctionExpression: string;
    AwaitExpression: string;
    BlockStatement: string;
    BinaryExpression: string;
    BreakStatement: string;
    CallExpression: string;
    CatchClause: string;
    ClassBody: string;
    ClassDeclaration: string;
    ClassExpression: string;
    ComprehensionBlock: string;
    ComprehensionExpression: string;
    ConditionalExpression: string;
    ContinueStatement: string;
    DebuggerStatement: string;
    DirectiveStatement: string;
    DoWhileStatement: string;
    EmptyStatement: string;
    ExportAllDeclaration: string;
    ExportDefaultDeclaration: string;
    ExportNamedDeclaration: string;
    ExportSpecifier: string;
    ExpressionStatement: string;
    ForStatement: string;
    ForInStatement: string;
    ForOfStatement: string;
    FunctionDeclaration: string;
    FunctionExpression: string;
    GeneratorExpression: string;
    Identifier: string;
    IfStatement: string;
    ImportDeclaration: string;
    ImportDefaultSpecifier: string;
    ImportNamespaceSpecifier: string;
    ImportSpecifier: string;
    Literal: string;
    LabeledStatement: string;
    LogicalExpression: string;
    MemberExpression: string;
    MethodDefinition: string;
    ModuleSpecifier: string;
    NewExpression: string;
    ObjectExpression: string;
    ObjectPattern: string;
    Program: string;
    Property: string;
    RestElement: string;
    ReturnStatement: string;
    SequenceExpression: string;
    SpreadElement: string;
    SuperExpression: string;
    SwitchStatement: string;
    SwitchCase: string;
    TaggedTemplateExpression: string;
    TemplateElement: string;
    TemplateLiteral: string;
    ThisExpression: string;
    ThrowStatement: string;
    TryStatement: string;
    UnaryExpression: string;
    UpdateExpression: string;
    VariableDeclaration: string;
    VariableDeclarator: string;
    WhileStatement: string;
    WithStatement: string;
    YieldExpression: string;
};
